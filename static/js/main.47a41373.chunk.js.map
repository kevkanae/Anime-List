{"version":3,"sources":["Redux/Switcher.js","Components/Navbar.js","Constants/AnimeTabList.js","Constants/MangaTabList.js","Components/Home.js","App.js","reportWebVitals.js","Redux/Store.js","index.js"],"names":["switchSlice","createSlice","name","initialState","value","reducers","switchOn","state","switchOff","actions","MyNavbar","isSwitched","useSelector","switcher","dispatch","useDispatch","className","bg","color","size","type","placeholder","display","alignItems","colorScheme","onChange","event","isChecked","id","animeList","val","mangaList","Home","useMediaQuery","isMobile","useState","constantList","setConstantList","apiData","setData","setLoading","currentTab","setTab","useEffect","url","axios","get","then","res","data","finally","handleTabClick","e","target","direction","align","justify","map","index","onClick","style","width","height","templateColumns","gap","href","h","w","src","alt","fontSize","fontWeight","App","document","body","backgroundColor","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","switchReducer","ReactDOM","render","store","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.47a41373.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const switchSlice = createSlice({\r\n  name: \"switcher\",\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    switchOn: (state) => {\r\n      state.value = true;\r\n    },\r\n    switchOff: (state) => {\r\n      state.value = false;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { switchOn, switchOff } = switchSlice.actions;\r\n\r\nexport default switchSlice.reducer;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { switchOn, switchOff } from \"../Redux/Switcher\";\r\nimport \"../Styles/NavbarStyles.css\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  Button,\r\n  InputRightElement,\r\n  Input,\r\n  InputGroup,\r\n  FormControl,\r\n  Switch,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst MyNavbar = () => {\r\n  const isSwitched = useSelector((state) => state.switcher.value);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSwitch = (event) => {\r\n    isSwitched ? dispatch(switchOff()) : dispatch(switchOn());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main\">\r\n        <Box className=\"Box\" bg={!isSwitched ? \"#f7d9d9\" : \"#d3e0ea\"}>\r\n          <Flex className=\"flex\">\r\n            <Box>\r\n              <Text color={!isSwitched ? \"#f25287\" : \"#3f3697\"}>\r\n                {!isSwitched ? \"A N I M E • アニメ\" : \"M A N G A • 漫画\"}\r\n              </Text>\r\n            </Box>\r\n            <Box className=\"rightBox\">\r\n              <Box className=\"inputGroup\">\r\n                <InputGroup size=\"md\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    color={!isSwitched ? \"#f25287\" : \"#3f3697\"}\r\n                    placeholder={!isSwitched ? \"Search Anime\" : \"Search Manga\"}\r\n                  />\r\n                  <InputRightElement>\r\n                    <Button>\r\n                      <BsSearch color={!isSwitched ? \"#f25287\" : \"#3f3697\"} />\r\n                    </Button>\r\n                  </InputRightElement>\r\n                </InputGroup>\r\n              </Box>\r\n\r\n              <Box className=\"formControl\">\r\n                <FormControl display=\"flex\" alignItems=\"center\">\r\n                  <Switch\r\n                    size=\"lg\"\r\n                    colorScheme=\"messenger\"\r\n                    onChange={handleSwitch}\r\n                    isChecked={isSwitched}\r\n                    id=\"mangaSwitch\"\r\n                  />\r\n                </FormControl>\r\n              </Box>\r\n            </Box>\r\n          </Flex>\r\n        </Box>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default MyNavbar;\r\n","export const animeList = [\r\n  {\r\n    name: \"All\",\r\n    val: \"tv\",\r\n  },\r\n  {\r\n    name: \"Top Airing\",\r\n    val: \"airing\",\r\n  },\r\n  {\r\n    name: \"Top Upcoming\",\r\n    val: \"upcoming\",\r\n  },\r\n  {\r\n    name: \"Top Movies\",\r\n    val: \"movie\",\r\n  },\r\n  {\r\n    name: \"Top Trending\",\r\n    val: \"bypopularity\",\r\n  },\r\n];\r\n","export const mangaList = [\r\n  {\r\n    name: \"All\",\r\n    val: \"manga\",\r\n  },\r\n  {\r\n    name: \"Novels\",\r\n    val: \"novels\",\r\n  },\r\n  {\r\n    name: \"Manwha\",\r\n    val: \"manhwa\",\r\n  },\r\n  {\r\n    name: \"Manhua\",\r\n    val: \"manhua\",\r\n  },\r\n  {\r\n    name: \"Doujin\",\r\n    val: \"doujin\",\r\n  },\r\n];\r\n","import { useSelector } from \"react-redux\";\r\nimport \"../Styles/HomeStyles.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { animeList } from \"../Constants/AnimeTabList\";\r\nimport { mangaList } from \"../Constants/MangaTabList\";\r\nimport axios from \"axios\";\r\nimport { Box, Flex, Text, Button, Grid, Image } from \"@chakra-ui/react\";\r\nimport { Scrollbars } from \"rc-scrollbars\";\r\nimport { useMediaQuery } from \"@chakra-ui/react\";\r\nimport { AiTwotoneStar } from \"react-icons/ai\";\r\n\r\nconst Home = () => {\r\n  const isSwitched = useSelector((state) => state.switcher.value);\r\n  const [isMobile] = useMediaQuery(\"(max-width: 600px)\");\r\n  const [constantList, setConstantList] = useState(\r\n    !isSwitched ? animeList : mangaList\r\n  );\r\n  const [apiData, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [currentTab, setTab] = useState(!isSwitched ? \"tv\" : \"manga\");\r\n\r\n  //---------------------------------------------------------------------------//\r\n  useEffect(() => {\r\n    if (!isSwitched) {\r\n      setConstantList(animeList);\r\n      setTab(\"tv\");\r\n    } else {\r\n      setConstantList(mangaList);\r\n      setTab(\"manga\");\r\n    }\r\n  }, [isSwitched]);\r\n  //---------------------------------------------------------------------------//\r\n  useEffect(() => {\r\n    const url = `https://api.jikan.moe/v3/top/${\r\n      !isSwitched ? \"anime\" : \"manga\"\r\n    }/1/${currentTab}`;\r\n\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        setData(res.data[\"top\"]);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [currentTab, isSwitched]);\r\n  //---------------------------------------------------------------------------//\r\n  const handleTabClick = (e) => {\r\n    setTab(e.target.value);\r\n  };\r\n  //---------------------------------------------------------------------------//\r\n  return (\r\n    <>\r\n      <Box className=\"main\">\r\n        <Box className=\"body\">\r\n          <Box className=\"appbar\" bg={!isSwitched ? \"#f7d9d9\" : \"#d3e0ea\"}>\r\n            <Flex direction=\"row\" align=\"center\" justify=\"space-evenly\">\r\n              {constantList.map((data, index) => {\r\n                return (\r\n                  <Button\r\n                    bg={!isSwitched ? \"#f7d9d9\" : \"#d3e0ea\"}\r\n                    color={!isSwitched ? \"#f25287\" : \"#3f3697\"}\r\n                    key={index}\r\n                    onClick={handleTabClick}\r\n                    value={data[\"val\"]}\r\n                    className=\"tabs\"\r\n                  >\r\n                    {data[\"name\"]}\r\n                  </Button>\r\n                );\r\n              })}\r\n            </Flex>\r\n          </Box>\r\n          <Scrollbars style={{ width: \"100%\", height: \"76vh\" }}>\r\n            <Grid\r\n              className=\"list\"\r\n              templateColumns={isMobile ? \"repeat(1, 1fr)\" : \"repeat(2, 1fr)\"}\r\n              gap={6}\r\n            >\r\n              {apiData.map((data, index) => {\r\n                return (\r\n                  <a href={data[\"url\"]}>\r\n                    <Box\r\n                      className=\"tile\"\r\n                      key={index}\r\n                      bg={!isSwitched ? \"snow\" : \"azure\"}\r\n                    >\r\n                      <Box className=\"image\">\r\n                        <Image\r\n                          h=\"100%\"\r\n                          w=\"100%\"\r\n                          src={data[\"image_url\"]}\r\n                          alt=\"Oops\"\r\n                        />\r\n                      </Box>\r\n                      <Box className=\"details\">\r\n                        <Box>\r\n                          <Text fontSize=\"md\" fontWeight=\"bold\">\r\n                            {data[\"title\"]}\r\n                          </Text>\r\n                          <Text fontSize=\"sm\">{data[\"type\"]}</Text>\r\n                          <Text fontSize=\"sm\">\r\n                            {data[\"start_date\"]} - {data[\"end_date\"]}\r\n                          </Text>\r\n                        </Box>\r\n\r\n                        <Box w=\"100%\">\r\n                          <Text fontSize=\"sm\">\r\n                            <AiTwotoneStar color=\"gold\" /> {data[\"score\"]}\r\n                          </Text>\r\n                        </Box>\r\n                      </Box>\r\n                    </Box>\r\n                  </a>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </Scrollbars>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { BrowserRouter, Route } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport MyNavbar from \"./Components/Navbar\";\nimport Home from \"./Components/Home\";\n\nfunction App() {\n  useEffect(() => {\n    document.body.style.backgroundColor = \"#d8e3e7\";\n  }, []);\n\n  return (\n    <div>\n      <BrowserRouter>\n        <MyNavbar />\n        <Route exact path=\"/\" component={Home} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport switchReducer from \"./Switcher\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    switcher: switchReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport store from \"./Redux/Store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}