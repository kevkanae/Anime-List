{"version":3,"sources":["Redux/Switcher.js","Redux/SearchData.js","Components/Navbar.js","Constants/AnimeTabList.js","Constants/MangaTabList.js","Components/Home.js","App.js","reportWebVitals.js","Redux/Store.js","index.js"],"names":["switchSlice","createSlice","name","initialState","value","reducers","switchOn","state","switchOff","actions","searchSlice","setTextData","payload","animeMangaSearch","MyNavbar","isSwitched","useSelector","switcher","dispatch","useDispatch","useState","formData","setFormData","useMediaQuery","isMobile","className","h","bg","direction","align","justify","color","flexDirection","w","size","onChange","e","target","type","placeholder","onClick","display","alignItems","colorScheme","event","isChecked","id","animeList","val","mangaList","Home","formText","searchData","constantList","setConstantList","apiData","setData","isLoading","setLoading","currentTab","setTab","console","log","useEffect","axios","get","then","res","data","finally","handleTabClick","map","index","fontSize","style","width","height","templateColumns","gap","href","src","alt","fontWeight","App","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","switchReducer","searchReducer","ReactDOM","render","store","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d1ae30b5.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const switchSlice = createSlice({\r\n  name: \"switcher\",\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    switchOn: (state) => {\r\n      state.value = true;\r\n    },\r\n    switchOff: (state) => {\r\n      state.value = false;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { switchOn, switchOff } = switchSlice.actions;\r\n\r\nexport default switchSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const searchSlice = createSlice({\r\n  name: \"searchData\",\r\n  initialState: {\r\n    value: null,\r\n  },\r\n  reducers: {\r\n    setTextData: (state, actions) => {\r\n      state.value = actions.payload.animeMangaSearch;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setTextData } = searchSlice.actions;\r\n\r\nexport default searchSlice.reducer;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { switchOn, switchOff } from \"../Redux/Switcher\";\r\nimport { setTextData } from \"../Redux/SearchData\";\r\nimport \"../Styles/NavbarStyles.css\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport { useMediaQuery } from \"@chakra-ui/react\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  Button,\r\n  InputRightElement,\r\n  Input,\r\n  InputGroup,\r\n  FormControl,\r\n  Switch,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\n\r\nconst MyNavbar = () => {\r\n  const isSwitched = useSelector((state) => state.switcher.value);\r\n  const dispatch = useDispatch();\r\n  const [formData, setFormData] = useState(\"\");\r\n  const [isMobile] = useMediaQuery(\"(max-width: 600px)\");\r\n  const handleSwitch = (event) => {\r\n    isSwitched ? dispatch(switchOff()) : dispatch(switchOn());\r\n  };\r\n  const sendFormData = () => {\r\n    dispatch(setTextData({ animeMangaSearch: formData }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main\">\r\n        <Box\r\n          h={isMobile ? \"25vh\" : \"12vh\"}\r\n          className=\"Box\"\r\n          bg={!isSwitched ? \"#f7d9d9\" : \"#d3e0ea\"}\r\n        >\r\n          <Flex\r\n            h={isMobile ? \"25vh\" : \"12vh\"}\r\n            direction={isMobile ? \"column\" : \"row\"}\r\n            align=\"center\"\r\n            justify=\"space-between\"\r\n          >\r\n            <Box>\r\n              <Text color={!isSwitched ? \"#f25287\" : \"#3f3697\"}>\r\n                {!isSwitched ? \"A N I M E • アニメ\" : \"M A N G A • 漫画\"}\r\n              </Text>\r\n            </Box>\r\n            <Box\r\n              flexDirection=\"column\"\r\n              h=\"100%\"\r\n              w={isMobile ? \"100%\" : \"35%\"}\r\n              className=\"rightBox\"\r\n            >\r\n              <Box className=\"inputGroup\">\r\n                <InputGroup size=\"md\">\r\n                  <Input\r\n                    onChange={(e) => setFormData(e.target.value)}\r\n                    type=\"text\"\r\n                    color={!isSwitched ? \"#f25287\" : \"#3f3697\"}\r\n                    placeholder={!isSwitched ? \"Search Anime\" : \"Search Manga\"}\r\n                  />\r\n                  <InputRightElement>\r\n                    <Button onClick={sendFormData}>\r\n                      <BsSearch color={!isSwitched ? \"#f25287\" : \"#3f3697\"} />\r\n                    </Button>\r\n                  </InputRightElement>\r\n                </InputGroup>\r\n              </Box>\r\n\r\n              <Box className=\"formControl\">\r\n                <FormControl display=\"flex\" alignItems=\"center\">\r\n                  <Switch\r\n                    size=\"lg\"\r\n                    colorScheme=\"messenger\"\r\n                    onChange={handleSwitch}\r\n                    isChecked={isSwitched}\r\n                    id=\"mangaSwitch\"\r\n                  />\r\n                </FormControl>\r\n              </Box>\r\n            </Box>\r\n          </Flex>\r\n        </Box>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default MyNavbar;\r\n","export const animeList = [\r\n  {\r\n    name: \"All\",\r\n    val: \"tv\",\r\n  },\r\n  {\r\n    name: \"Top Airing\",\r\n    val: \"airing\",\r\n  },\r\n  {\r\n    name: \"Top Upcoming\",\r\n    val: \"upcoming\",\r\n  },\r\n  {\r\n    name: \"Top Movies\",\r\n    val: \"movie\",\r\n  },\r\n  {\r\n    name: \"Top Trending\",\r\n    val: \"bypopularity\",\r\n  },\r\n];\r\n","export const mangaList = [\r\n  {\r\n    name: \"All\",\r\n    val: \"manga\",\r\n  },\r\n  {\r\n    name: \"Novels\",\r\n    val: \"novels\",\r\n  },\r\n  {\r\n    name: \"Manwha\",\r\n    val: \"manhwa\",\r\n  },\r\n  {\r\n    name: \"Manhua\",\r\n    val: \"manhua\",\r\n  },\r\n  {\r\n    name: \"Doujin\",\r\n    val: \"doujin\",\r\n  },\r\n];\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../Styles/HomeStyles.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { animeList } from \"../Constants/AnimeTabList\";\r\nimport { mangaList } from \"../Constants/MangaTabList\";\r\nimport axios from \"axios\";\r\nimport { Box, Flex, Text, Button, Grid, Image } from \"@chakra-ui/react\";\r\nimport { Scrollbars } from \"rc-scrollbars\";\r\nimport { useMediaQuery } from \"@chakra-ui/react\";\r\nimport { setTextData } from \"../Redux/SearchData\";\r\nimport { AiTwotoneStar } from \"react-icons/ai\";\r\n\r\nconst Home = () => {\r\n  const isSwitched = useSelector((state) => state.switcher.value);\r\n  const formText = useSelector((state) => state.searchData.value);\r\n  const dispatch = useDispatch();\r\n  const [isMobile] = useMediaQuery(\"(max-width: 600px)\");\r\n  const [constantList, setConstantList] = useState(\r\n    !isSwitched ? animeList : mangaList\r\n  );\r\n  const [apiData, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [currentTab, setTab] = useState(!isSwitched ? \"tv\" : \"manga\");\r\n  console.log(formText);\r\n  //---------------------------------------------------------------------------//\r\n  useEffect(() => {\r\n    if (!isSwitched) {\r\n      setConstantList(animeList);\r\n      setTab(\"tv\");\r\n    } else {\r\n      setConstantList(mangaList);\r\n      setTab(\"manga\");\r\n    }\r\n  }, [isSwitched]);\r\n\r\n  useEffect(() => {\r\n    if (formText === null) {\r\n      axios\r\n        .get(\r\n          `https://api.jikan.moe/v3/top/${\r\n            !isSwitched ? \"anime\" : \"manga\"\r\n          }/1/${currentTab}`\r\n        )\r\n        .then((res) => {\r\n          setData(res.data[\"top\"]);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      axios\r\n        .get(\r\n          `https://api.jikan.moe/v3/search/${\r\n            !isSwitched ? \"anime\" : \"manga\"\r\n          }?q=${formText}&page=1`\r\n        )\r\n        .then((res) => {\r\n          setData(res.data[\"results\"]);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [currentTab, formText, isSwitched]);\r\n  //---------------------------------------------------------------------------//\r\n  const handleTabClick = (e) => {\r\n    setTab(e.target.value);\r\n  };\r\n  //---------------------------------------------------------------------------//\r\n  return (\r\n    <>\r\n      <Box className=\"main\">\r\n        <Box className=\"body\">\r\n          <Box className=\"appbar\" bg={!isSwitched ? \"#f7d9d9\" : \"#d3e0ea\"}>\r\n            <Flex direction=\"row\" align=\"center\" justify=\"space-evenly\">\r\n              {formText === null ? (\r\n                constantList.map((data, index) => {\r\n                  return (\r\n                    <>\r\n                      <Button\r\n                        bg={!isSwitched ? \"#f7d9d9\" : \"#d3e0ea\"}\r\n                        color={!isSwitched ? \"#f25287\" : \"#3f3697\"}\r\n                        key={index}\r\n                        onClick={handleTabClick}\r\n                        value={data[\"val\"]}\r\n                        className=\"tabs\"\r\n                        fontSize={isMobile ? \"12px\" : \"md\"}\r\n                      >\r\n                        {data[\"name\"]}\r\n                      </Button>\r\n                    </>\r\n                  );\r\n                })\r\n              ) : (\r\n                <>\r\n                  <Button className=\"tabs\">\r\n                    Search Results For: {formText}\r\n                  </Button>\r\n                  <Button\r\n                    bg={!isSwitched ? \"#f7d9d9\" : \"#d3e0ea\"}\r\n                    color={!isSwitched ? \"#f25287\" : \"#3f3697\"}\r\n                    onClick={() =>\r\n                      dispatch(setTextData({ animeMangaSearch: null }))\r\n                    }\r\n                    className=\"tabs\"\r\n                  >\r\n                    Go Back\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Flex>\r\n          </Box>\r\n          <Scrollbars style={{ width: \"100%\", height: \"76vh\" }}>\r\n            {!isLoading ? (\r\n              <Grid\r\n                className=\"list\"\r\n                templateColumns={isMobile ? \"repeat(1, 1fr)\" : \"repeat(2, 1fr)\"}\r\n                gap={6}\r\n              >\r\n                {apiData.map((data, index) => {\r\n                  return (\r\n                    <a href={data[\"url\"]}>\r\n                      <Box\r\n                        className=\"tile\"\r\n                        key={index}\r\n                        bg={!isSwitched ? \"snow\" : \"azure\"}\r\n                      >\r\n                        <Box className=\"image\">\r\n                          <Image\r\n                            h=\"100%\"\r\n                            w=\"100%\"\r\n                            src={data[\"image_url\"]}\r\n                            alt=\"Oops\"\r\n                          />\r\n                        </Box>\r\n                        <Box className=\"details\">\r\n                          <Box>\r\n                            <Text fontSize=\"md\" fontWeight=\"bold\">\r\n                              {data[\"title\"]}\r\n                            </Text>\r\n                            <Text fontSize=\"sm\">{data[\"type\"]}</Text>\r\n                            <Text fontSize=\"sm\">\r\n                              {data[\"start_date\"]} - {data[\"end_date\"]}\r\n                            </Text>\r\n                          </Box>\r\n\r\n                          <Box w=\"100%\">\r\n                            <Text fontSize=\"sm\">\r\n                              <AiTwotoneStar color=\"gold\" /> {data[\"score\"]}\r\n                            </Text>\r\n                          </Box>\r\n                        </Box>\r\n                      </Box>\r\n                    </a>\r\n                  );\r\n                })}\r\n              </Grid>\r\n            ) : (\r\n              <center>Error</center>\r\n            )}\r\n          </Scrollbars>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useEffect } from \"react\";\nimport MyNavbar from \"./Components/Navbar\";\nimport Home from \"./Components/Home\";\n\nfunction App() {\n  useEffect(() => {\n    document.body.style.backgroundColor = \"#d8e3e7\";\n  }, []);\n\n  return (\n    <div>\n      <MyNavbar />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport switchReducer from \"./Switcher\";\r\nimport searchReducer from \"./SearchData\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    switcher: switchReducer,\r\n    searchData: searchReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport store from \"./Redux/Store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}