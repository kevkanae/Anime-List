{"version":3,"sources":["Styles/AppBarStyles.js","Redux/Switcher.js","Components/AppBar.js","Pages/Manga.js","Styles/Anime1Styles.js","Styles/Anime1MobileStyles.js","Constants/TabList.js","Pages/Anime1.js","App.js","reportWebVitals.js","Redux/Store.js","index.js"],"names":["useAppBarStyles","makeStyles","theme","title","fontFamily","textDecoration","fontSize","color","header","display","flexDirection","justifyContent","alignItems","grow","flexGrow","div","link","switchBase","backgroundColor","switchSlice","createSlice","name","initialState","value","reducers","switchOn","state","switchOff","actions","MyAppBar","classes","history","useHistory","isSwitched","useSelector","switcher","dispatch","useDispatch","className","AppBar","position","style","Toolbar","to","Typography","FormControlLabel","control","Switch","disableRipple","checked","onChange","event","target","push","label","height","width","MangaComponent","useMainStyles","main","root","appbar","body","padding","tile","boxShadow","margin","borderRadius","imageTag","imageDiv","objectFit","details","score","star","scoreP","fontWeight","myButton","breakpoints","down","useMobileStyles","tabList","val","AnimeComponent1","mobile","useState","isLoading","setLoading","currentTab","setTab","array","setAPIArray","screenWidth","useMediaQuery","useEffect","url","axios","get","then","res","data","finally","handleChange","currentTarget","map","index","Button","onClick","href","src","alt","App","document","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","switchReducer","ReactDOM","render","store","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.93cd729e.chunk.js","sourcesContent":["import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const useAppBarStyles = makeStyles((theme) => ({\r\n    title: {\r\n        fontFamily: \"'Kosugi', sans-serif\",\r\n        textDecoration: \"none\",\r\n        fontSize: '30px',\r\n        '&:hover': {\r\n            color: 'lavender'\r\n        }\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n        alignItems: 'center'\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    div: {\r\n        flexGrow: 0.05,\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n    },\r\n    switchBase: {\r\n        color: '#f25287',\r\n        '&$checked': {\r\n            color: '#f25287',\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: '#f25287',\r\n        },\r\n    },\r\n}));","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const switchSlice = createSlice({\r\n  name: \"switcher\",\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    switchOn: (state) => {\r\n      state.value = true;\r\n    },\r\n    switchOff: (state) => {\r\n      state.value = false;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { switchOn, switchOff } = switchSlice.actions;\r\n\r\nexport default switchSlice.reducer;\r\n","import { useAppBarStyles } from \"../Styles/AppBarStyles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { switchOn, switchOff } from \"../Redux/Switcher\";\r\n\r\nconst MyAppBar = () => {\r\n  const classes = useAppBarStyles();\r\n  const history = useHistory();\r\n\r\n  const isSwitched = useSelector((state) => state.switcher.value);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event) => {\r\n    event.target.checked ? history.push(\"/manga\") : history.push(\"/Anime-List\");\r\n    isSwitched ? dispatch(switchOff()) : dispatch(switchOn());\r\n  };\r\n  return (\r\n    <>\r\n      <div className={classes.grow}>\r\n        <AppBar\r\n          position={\"sticky\"}\r\n          style={\r\n            !isSwitched\r\n              ? { backgroundColor: \"#f7d9d9\" }\r\n              : { backgroundColor: \"#d3e0ea\" }\r\n          }\r\n        >\r\n          <Toolbar>\r\n            <Link className={classes.title} to=\"/\">\r\n              <div className={classes.header}>\r\n                <Typography\r\n                  style={\r\n                    !isSwitched ? { color: \"#f25287\" } : { color: \"#276678\" }\r\n                  }\r\n                  className={classes.title}\r\n                >\r\n                  {!isSwitched ? \"A N I M E • アニメ\" : \"M A N G A • 漫画\"}\r\n                </Typography>\r\n              </div>\r\n            </Link>\r\n            <div className={classes.grow} />\r\n            <div className={classes.div}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    disableRipple\r\n                    classes={{\r\n                      switchBase: classes.switchBase,\r\n                    }}\r\n                    checked={isSwitched}\r\n                    onChange={handleChange}\r\n                    name=\"isChecked\"\r\n                  />\r\n                }\r\n                label=\"Manga\"\r\n                style={isSwitched ? { color: \"#f25287\" } : { color: \"#276678\" }}\r\n              />\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      <div style={{ height: \"3vh\", width: \"100vh\" }} />\r\n    </>\r\n  );\r\n};\r\nexport default MyAppBar;\r\n","\r\n\r\nconst MangaComponent =()=>{\r\n    return(\r\n        <>\r\n            <p>Manga</p>\r\n        </>\r\n    )\r\n}\r\nexport default MangaComponent","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useMainStyles = makeStyles((theme) => ({\r\n  main: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  root: {\r\n    width: \"94vw\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  appbar: {\r\n    backgroundColor: \"#fff2f2\",\r\n    height: \"10vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  body: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    padding: \"3%\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  tile: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    width: \"92%\",\r\n    height: \"40%\",\r\n    padding: \"1%\",\r\n    backgroundColor: \"whitesmoke\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fffafa\",\r\n      boxShadow: \"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)\",\r\n    },\r\n    margin: \"2%\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  imageTag: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  imageDiv: {\r\n    objectFit: \"contain\",\r\n    height: \"100%\",\r\n    width: \"19%\",\r\n    padding: \"2%\",\r\n  },\r\n  details: {\r\n    height: \"100%\",\r\n    width: \"59%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n  },\r\n  score: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    width: \"19%\",\r\n  },\r\n  star: {\r\n    color: \"#fa9905\",\r\n  },\r\n  scoreP: {\r\n    fontSize: \"15px\",\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n    color: \"#02475e\",\r\n  },\r\n  myButton: {\r\n    color: \"#f25287\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"12px\",\r\n    },\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useMobileStyles = makeStyles((theme) => ({\r\n  tile: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    width: \"92%\",\r\n    height: \"60%\",\r\n    padding: \"1%\",\r\n    backgroundColor: \"whitesmoke\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fffafa\",\r\n      boxShadow: \"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)\",\r\n    },\r\n    margin: \"2%\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  imageTag: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  imageDiv: {\r\n    width: \"92%\",\r\n    height: \"80%\",\r\n  },\r\n  title: {\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bold\",\r\n    color: \"#02475e\",\r\n  },\r\n}));\r\n","export const tabList = [\r\n  {\r\n    name: \"All\",\r\n    val: \"tv\",\r\n  },\r\n  {\r\n    name: \"Top Airing\",\r\n    val: \"airing\",\r\n  },\r\n  {\r\n    name: \"Top Upcoming\",\r\n    val: \"upcoming\",\r\n  },\r\n  {\r\n    name: \"Top Movies\",\r\n    val: \"movie\",\r\n  },\r\n  {\r\n    name: \"Top Trending\",\r\n    val: \"bypopularity\",\r\n  },\r\n];\r\n","import { useMainStyles } from \"../Styles/Anime1Styles\";\r\nimport { useMobileStyles } from \"../Styles/Anime1MobileStyles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Progress from \"@material-ui/core/LinearProgress\";\r\nimport axios from \"axios\";\r\nimport { tabList } from \"../Constants/TabList\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { GiBarbedStar } from \"react-icons/gi\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nexport default function AnimeComponent1() {\r\n  const classes = useMainStyles();\r\n  const mobile = useMobileStyles();\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [currentTab, setTab] = useState(\"tv\");\r\n  const [array, setAPIArray] = useState([]);\r\n  const screenWidth = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  useEffect(() => {\r\n    const url = `https://api.jikan.moe/v3/top/anime/1/${currentTab}`;\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        setAPIArray(res.data[\"top\"]);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [currentTab]);\r\n\r\n  const handleChange = (event) => {\r\n    setTab(event.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <div className={classes.root}>\r\n        <header className={classes.appbar}>\r\n          {tabList.map((data, index) => {\r\n            return (\r\n              <Button\r\n                onClick={handleChange}\r\n                value={data.val}\r\n                className={classes.myButton}\r\n                key={index}\r\n              >\r\n                {data.name}\r\n              </Button>\r\n            );\r\n          })}\r\n        </header>\r\n        <div className={classes.body}>\r\n          {isLoading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Scrollbars>\r\n              {array.map((data, index) => {\r\n                return (\r\n                  <a key={index} href={data[\"url\"]}>\r\n                    {screenWidth ? (\r\n                      <div className={classes.tile}>\r\n                        <div className={classes.imageDiv}>\r\n                          <img\r\n                            className={classes.imageTag}\r\n                            src={data[\"image_url\"]}\r\n                            alt={`${index}`}\r\n                          />\r\n                        </div>\r\n                        <div className={classes.details}>\r\n                          <h1 className={classes.title}>{data[\"title\"]}</h1>\r\n                          <p>\r\n                            {data[\"type\"]}({data[\"episodes\"]} eps)\r\n                          </p>\r\n                          <p>\r\n                            {data[\"start_date\"]} - {data[\"end_date\"]}\r\n                          </p>\r\n                        </div>\r\n                        <div className={classes.score}>\r\n                          <span className={classes.star}>\r\n                            <GiBarbedStar />\r\n                          </span>{\" \"}\r\n                          <p className={classes.scoreP}>\r\n                            Score: {data[\"score\"]}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // MOBILE - VIEW\r\n                      <div className={mobile.tile}>\r\n                        <div className={mobile.imageDiv}>\r\n                          <img\r\n                            className={mobile.imageTag}\r\n                            src={data[\"image_url\"]}\r\n                            alt={`${index}`}\r\n                          />\r\n                        </div>\r\n                        <h1 className={mobile.title}>{data[\"title\"]}</h1>\r\n                      </div>\r\n                    )}\r\n                  </a>\r\n                );\r\n              })}\r\n            </Scrollbars>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import MyAppBar from \"./Components/AppBar\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport MangaComponent from \"./Pages/Manga\";\nimport { useEffect } from \"react\";\nimport AnimeComponent1 from \"./Pages/Anime1\";\n\nfunction App() {\n  useEffect(() => {\n    document.body.style.backgroundColor = \"#d8e3e7\";\n  }, []);\n  return (\n    <div>\n      <BrowserRouter>\n        <MyAppBar />\n        <Route exact path={\"/Anime-List\"} component={AnimeComponent1} />\n        <Route path={\"/manga\"} component={MangaComponent} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport switchReducer from \"./Switcher\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    switcher: switchReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport store from \"./Redux/Store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <ChakraProvider>\r\n        <App />\r\n      </ChakraProvider>\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}